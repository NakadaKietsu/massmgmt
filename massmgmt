#!/bin/bash
# -----------------------------------------------------------------------------
#                                massmgmt
#                 launchd-based macOS desired-state management
#                           Last Edited: 6/15/17
# -----------------------------------------------------------------------------
# variables -------------------------------------------------------------------
# define admin user
adminUser="$(dscl . list /Users UniqueID | awk '$2 == 501 {print $1}')"

# define managed user
manageUser="$(dscl . list /Users UniqueID | awk '$2 == 502 {print $1}')"

# log file location
logFile="/Users/$adminUser/Library/Logs/massmgmt/massmgmtLog.txt"
starDate="$(date)"
hostName="$(hostname)"

# define location of help page
helpPage="/usr/local/massmgmt/help.txt"

# define log location
logDir="/Users/$adminUser/Library/Logs/massmgmt"

# define bin location for scripts
binLoc="/usr/local/massmgmt/bin"

# define directory for configuration profiles
profLoc="/usr/local/massmgmt/mconfig"

# add phone home for text data of status or log aggregation in later versions

# ----------list functions and packaged scripts that massmgmt can call---------
#/usr/local/massmgmt/bin/autoUpdate
#/usr/local/massmgmt/bin/checkChrome.py
#/usr/local/massmgmt/bin/chrome
#/usr/local/massmgmt/bin/enableARD
#/usr/local/massmgmt/bin/enableSSH
#/usr/local/massmgmt/bin/setHostname
#/usr/local/massmgmt/bin/setTimezone
# -----------------------------------------------------------------------------
# functions
function massmgmtRun {
    sudo -v
    sudo echo >> "$logFile"
    sudo echo "$starDate -- $hostName ----" >> "$logFile"
    sudo echo >> "$logFile"
    # run autoUpdate script
    sudo echo "$starDate --- Running autoUpdate" >> "$logFile"
    $binLoc/autoUpdate
    # run chrome update script
    sudo echo "$starDate --- Running check chrome" >> "$logFile"
    $binLoc/checkChrome.py
    # run enableARD script
    sudo echo "$starDate --- Running enableARD" >> "$logFile"
    $binLoc/enableARD
    # run enableSSH script
    sudo echo "$starDate --- Running enableARD" >> "$logFile"
    $binLoc/enableSSH
    # run setHostname script
    sudo echo "$starDate --- Running setHostname" >> "$logFile"
    $binLoc/setHostname
    # run setTimezone script
    sudo echo "$starDate --- Running setTimezone" >> "$logFile"
    $binLoc/setTimezone
    # close out log
    sudo echo >> "$logFile"
    sudo echo "$starDate --- Exiting" >> "$logFile"
    sudo echo >> "$logFile"
    sudo echo "$starDate -- $hostName ----" >> "$logFile"
}

function flushLogs {
    printf "Are you sure you want to flush the log directory? (y/n) -> "
    read A
    if [ "$A" == "n" ] ; then
        exit
    elif [ "$A" == "y" ] ; then
        echo "Removing $logDir"
        rm -rf "$logDir"
        echo "Rebuilding the log directory at $logDir"
        mkdir "$logDir"
        echo "Logs flushed"
        exit
    else
        echo "Invalid option"
    fi
}

function rmProfiles {
    echo "Removing all configuration profiles installed on this computer."
    profiles -H
    profiles -C
    profiles -P
    sudo profiles -D
}

function installProfiles {
    echo "Configuration profiles can only be installed for the current user. If you are admin,"
    echo "log in as the managed user to use this tool"
    printf "Continue? (y/n) -> "
    read B
    if [ "$B" == "n" ] ; then
        exit
    elif [ "B" == "y" ] ; then
        echo "Installing all configuration profiles stored in /usr/local/massmgmt/mconfig for $manageUser"
        cd "$profLoc"
        ls -l | awk '/-rw/ {print $(9) }' >> "$profLoc/profiles.txt"
        cat "$profLoc/profiles.txt" | while read line
        do
            profiles -I "$profLoc/$line"
        done
    else
        exit
    fi
}

# -----------------------------------------------------------------------------

if [ "$1" == "flushLogs" ] ; then
    flushLogs
elif [ "$1" == "uninstall" ] ; then
    /usr/local/massmgmt/sbin/uninstallmassmgmt.sh
elif [ "$1" == "rmProfiles" ] ; then
    rmProfiles
elif [ "$1" == "installProfiles" ] ; then
    installProfiles
elif [ "$1" == "help" ] ; then
    cat /usr/local/massmgmt/help.txt
else
    massmgmtRun
fi
exit
# -----------------------------------------------------------------------------
